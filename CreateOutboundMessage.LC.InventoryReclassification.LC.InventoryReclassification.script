import solomodel.util.DateUtils;
import java.text.SimpleDateFormat;
BigDecimal qty = BigDecimal.ZERO;
User user = null;
MaterialMaster mm = null;

List<MMSerialNumber> serial = null;

XMLNodeBuilder dimensions = null;
  



String baseDimensionQuery = "";
baseDimensionQuery += "FROM MIMovement mim ";
baseDimensionQuery += "INNER JOIN MIAdjustment mia on mia.Movement = mim ";
baseDimensionQuery += "INNER JOIN MIAdjustmentDimension miad on miad.Adjustment = mia ";
baseDimensionQuery += "INNER JOIN MIDimension mid on miad.Dimension = mid ";




if (movement.getUser() != null){
	if (movement.getUser() instanceof User){
		user = (User) movement.getUser();
	}
}


if(movement.getMaterial() != null){
	XMLNodeBuilder node = builder.addNode();
	
	if(movement.getMaterialMaster() != null){
		mm = movement.getMaterialMaster();	
	}
	
	node = node.addNode("Transaction");
	node.addNode("Source", "Solochain");
	node.addNode("Instance", movement.getFromSite().getAccountNo());
	node = node.addNode("InventoryReclassification");
	node.addNode("OID", movement);
	node.addNode("SystemEvent", exportEvent);
	node.addNode("Type",movement.getType());
	node.addNode("Site", movement.getFromSite().getAccountNo());
	node.addNode("PartNo", movement.getMaterialMaster().getPartNo());


	if(movement.getQuantity() !=null){
		node.addNode("AdjustedQty",  movement.getQuantity().getBaseValue());
		node.addNode("UOI", movement.getUOI().getName());
		node.addNode("AdjustedBaseQty", movement.getQuantity().getBaseValue());	
	}
	node.addNode("BaseUOI",mm.getBaseUOI().getName());
	node.addNode("ReasonCode","SOLO_TC");
	if(movement.getFromOwner() != null){
		node.addNode("Owner",movement.getFromOwner().getName());
	}else if(movement.getToOwner() != null){
		node.addNode("Owner",movement.getToOwner().getName());
	}
	if(user.getUserName() != null){
		node.addNode("User",user.getUserName());
	}
	node.addNode("DateTime",DateUtils.formatISO(movement.getStampDate())); // right DateTime...?


	node = node.addNode("Dimensions");


	// CUSTOM BIZCHAIN 168549
	String newSqlLotNo = "";
	newSqlLotNo += "Select mmd, mia.Type ";
	newSqlLotNo += baseDimensionQuery;
	newSqlLotNo += "inner join MMDimension mmd on mmd = mid.Dimension ";
	newSqlLotNo += "WHERE mim = ?";//NegativeAdj -- From PositiveAdj
	
	
		
	List<String[]> strs_mmd = t.getList(newSqlLotNo.toString(), movement);
	String fromSerial,fromLot,fromCoo;
	Date fromExpiry = null;
	String toSerial,toLot,toCoo;
	fromSerial=fromLot=fromCoo = "" ;
	toSerial=toLot=toCoo = "" ;
	Date toExpiry = null;
	if(!strs_mmd.isEmpty()){
		for(String[] str : strs_mmd){
			MMDimension mmd = t.get(MMDimension.class, Integer.parseInt(str[0]));
			fromExpiry = null;
			toSerial=toLot=toCoo = "" ;
			
			if (mmd instanceof MMSerialNumber){
				 if(str[1].equals("NegativeAdj") || str[1].equals("MoveIn") || str[1].equals("FromUOI")){			
					fromSerial = mmd.getValue();						
					node.addNode("FromSerialNo",fromSerial);					
				}else
				if (str[1].equals("PositiveAdj") || str[1].equals("MoveOut") || str[1].equals("ToUOI")){
					toSerial = mmd.getValue();
					node.addNode("ToSerialNo",toSerial);
				}
					if(toSerial.equals("")){
						toSerial = fromSerial;
						node.addNode("ToSerialNo",toSerial);
					}

			}

			toLot = "";
			if(mmd instanceof MMLotNumber){
				if(str[1].equals("NegativeAdj") || str[1].equals("MoveIn") || str[1].equals("FromUOI")){				
					fromLot = mmd.getValue();	
					node.addNode("FromLotNo",fromLot);
				}else if (str[1].equals("PositiveAdj") || str[1].equals("MoveOut") || str[1].equals("ToUOI")){
					toLot = mmd.getValue();	
					node.addNode("ToLotNo",toLot);
				}
					if(toLot.equals("")){
						toLot = fromLot;
						node.addNode("ToLotNo",toLot);
					}

			}


			toExpiry = null;
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
			Date date = new Date();
			if (mmd instanceof MMExpiryDate){
				MMExpiryDate mmde = t.get(MMExpiryDate.class, mmd.getOID());
				if(str[1].equals("NegativeAdj") || str[1].equals("MoveIn") || str[1].equals("FromUOI")){
					fromExpiry =  mmde.getExpiryDate();
					node.addNode("FromExpiryDate",dateFormat.format(fromExpiry));
				}else if (str[1].equals("PositiveAdj") || str[1].equals("MoveOut") || str[1].equals("ToUOI")){
					toExpiry =  mmde.getExpiryDate();
					node.addNode("ToExpiryDate",dateFormat.format(toExpiry));
				}
					if(toExpiry == null){
						toExpiry = fromExpiry;
						node.addNode("ToExpiryDate",dateFormat.format(toExpiry));
					}

			}


			toCoo = "";
			if (mmd instanceof MMCountryOfOrigin){
				if(str[1].equals("NegativeAdj") || str[1].equals("MoveIn") || str[1].equals("FromUOI")){
					fromCoo = mmd.getValue();
					node.addNode("FromCOO",fromCoo);
				}else if (str[1].equals("PositiveAdj") || str[1].equals("MoveOut") || str[1].equals("ToUOI")){
					toCoo = mmd.getValue();
					node.addNode("ToCOO",toCoo);
				}
					if(toCoo.equals("")){
						toCoo = fromCoo;
						node.addNode("ToCOO",toCoo);
					}
			}
			
		}
	}
	if(fromSerial.equals("") && toSerial.equals("")){
		node.addNode("FromSerialNo","");
		node.addNode("ToSerialNo","");
	}
	if(fromLot.equals("") && toLot.equals("")){
		node.addNode("FromLotNo","");
		node.addNode("ToLotNo","");
	}
	if(fromExpiry == null && toExpiry == null){
		node.addNode("FromExpiryDate","");
		node.addNode("ToExpiryDate","");
	}
	if(fromCoo.equals("") && toCoo.equals("")){
		node.addNode("FromCOO","");
		node.addNode("ToCOO","");
	}	
}
	

return null;